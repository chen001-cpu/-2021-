买不到的数目
要求：
小明开了一家糖果店。他别出心裁：把水果糖包成4颗一包和7颗一包的两种。糖果不能拆包卖。
小朋友来买糖的时候，他就用这两种包装来组合。当然有些糖果数目是无法组合出来的，比如要买 10 颗糖。
你可以用计算机测试一下，在这种包装情况下，最大不能买到的数量是17。大于17的任何数字都可以用4和7组合出来。
    本题的要求就是在已知两个包装的数量时，求最大不能组合出的数字。
    
输入：两个正整数，表示每种包装中糖的颗数(都不多于1000)
要求输出：一个正整数，表示最大不能买到的糖数

输入样例： 
4 7

输出样例：
17
----------------------------------------------------------
#include<stdio.h>
int GYS(int n,int m)//最大公约数
{
    int t;
    if(n<m)
    {
      t=n;
      n=m;
      m=t;
    }
    if(n%m==0)
    return m;
    return GYS(m,n%m);
}
int GBS(int n,int m)//最小公倍数
{
    int awn;
    awn=n*m/GYS(n,m);
    return awn;
}
int main()
{
    int i,j,t,gcd,n,m,aws=0,flag,k;
    scanf("%d %d",&n,&m);
    gcd=GBS(n,m);
    if(n<m)
    {
      t=n;
      n=m;
      m=t;
    }
    int x=(gcd/m)+1;
    for(i=gcd;i>=1;i--)
    {
       flag=0;
       for(k=0;k<=x;k++)
           for(j=x;j>=0;j--)
           {  
             if(!(k==0&&j==0))//防止除零错误
             {
               if(i%(n*k+m*j)==0)
                 flag=1;
             }
           }
       if(flag==0)
       {
          aws=i;
          break;
       }
    }
    printf("%d\n",aws);
    return 0;
}
